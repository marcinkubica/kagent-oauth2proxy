# Default values for oauth2proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: quay.io/oauth2-proxy/oauth2-proxy
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v7.9.0"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  fsGroup: 65532

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8090
  targetPort: 4180

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: kagent.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: kagent-tls
  #    hosts:
  #      - kagent.local

resources:
  limits:
    cpu: 200m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /ping
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

oauth2:
  provider: "github"
  
  # GitHub specific configuration
  # IMPORTANT: OAuth2 credentials should NEVER be set directly in this file!
  github:
    org: ""   # Leave empty for individual users (no organization required)
    team: ""  # Leave empty for individual users (no team required)
    users:    # Specify exact GitHub usernames allowed to access Kagent
      - "my-username"  # CHANGE THIS: Add your GitHub username here
      # - "friend-username"     # Add more users as needed

  
  # Email domains allowed (empty means any domain)
  emailDomains: []
  # Example: ["example.com", "company.org"]
  
  # Additional scopes to request (will use provider defaults if empty)
  scope: ""
  
  # Skip authentication for specific paths (regex patterns)
  skipAuthRegex:
    - "^/ping"
    - "^/health"
    - "^/ready"
    - "^/metrics"
  
  # Mark paths as API routes (return 401 instead of redirect)
  apiRoutes: []
  # Example: ["^/api"]

# Cookie configuration
cookie:
  name: "_oauth2_proxy"
  domain: ""  # Set to your domain for production, e.g., ".example.com"
  expire: "168h"  # 7 days
  refresh: "1h"   # Refresh token after 1 hour
  secure: false   # Set to false for HTTP (dev only), true for HTTPS production
  httpOnly: true
  sameSite: "lax"  # lax, strict, or none

# Session configuration
session:
  storeType: "cookie"  # cookie or redis
  
# Upstream configuration - points to Kagent UI service
upstream:
  # Kagent service configuration
  kagent:
    # Service name and namespace where Kagent is deployed
    service: "kagent.kagent.svc.cluster.local"
    port: 80
    
  # Full upstream URL (will be constructed from service and port if not set)
  url: ""  # e.g., "http://kagent.kagent.svc.cluster.local:80"

# Logging configuration
logging:
  level: "info"  # debug, info, warn, error
  format: "text"  # text or json
  requestLogging: true
  authLogging: true
  standardLogging: true
  silencePingLogging: true

# Templates and branding configuration
templates:
  # Custom logo configuration
  customLogo:
    enabled: true
    # Path to the logo file (will be mounted as volume)
    path: "/etc/oauth2-proxy/logo/icon-light.svg"
  
  # Custom banner text
  banner: "Welcome to kagent!"
  
  # Custom footer text (optional)
  footer: "Learn more at https://kagent.dev/"

# Security configuration
security:
  # Pass user information to upstream
  passBasicAuth: true
  passUserHeaders: true
  passAccessToken: false
  setXAuthRequest: true
  
  # open login page with provider button
  skipProviderButton: false 
  
  # Force HTTPS redirect
  forceHttps: false  # Set to true for production
  
  # Skip SSL verification (dev only)
  sslInsecureSkipVerify: false
  
  # CSRF protection
  cookieCsrfPerRequest: true
  cookieCsrfExpire: "5m"

# Metrics configuration
metrics:
  enabled: true
  port: 44180
  path: /metrics

# External secrets configuration
# Enable this for production environments using external secret management
# (e.g., External Secrets Operator https://github.com/external-secrets/external-secrets )
externalSecrets:
  enabled: false  # Set to true to use external secret management
  secretName: "oauth2proxy-secrets"  # Name of the external secret
  keys:
    # Keys within the external secret containing OAuth2 credentials
    clientId: "client-id"
    clientSecret: "client-secret"
    cookieSecret: "cookie-secret"

# Environment variables
env: []
# Example:
# - name: CUSTOM_VAR
#   value: "custom-value"

# Extra arguments to pass to oauth2-proxy
extraArgs:
  - "--redirect-url=http://localhost:8090/oauth2/callback"  # CHANGE THIS for production
# Additional examples:
# - "--skip-jwt-bearer-tokens"
# - "--pass-host-header=false"
